apiVersion: v1
kind: ConfigMap
metadata:
  name: eureka-cm
  namespace: wolf-ott
data:
  eureka_address: "http://212.237.231.147:31500/eureka"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eureka
  name: eureka
  namespace: wolf-ott
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8761
      targetPort: 8761
  selector:
    app: eureka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eureka
  namespace: wolf-ott
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  serviceName: "eureka"
  replicas: 1
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
      containers:
        - name: eureka
          image: alismak/wolf-ott-discovery-server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8761
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker"
            - name: EUREKA_INSTANCE_HOSTNAME
              value: "eureka-0.eureka.svc.cluster.local"
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              valueFrom:
                configMapKeyRef:
                  name: eureka-cm
                  key: eureka_address
            - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
              value: "true"
            - name: EUREKA_CLIENT_FETCH_REGISTRY
              value: "true"
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: eureka-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eureka
  name: eureka-lb
spec:
  selector:
    app: eureka
  type: NodePort
  ports:
    - port: 80
      targetPort: 8761
      nodePort: 31500
